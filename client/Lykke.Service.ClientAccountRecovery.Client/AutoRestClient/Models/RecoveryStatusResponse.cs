// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.ClientAccountRecovery.Client.AutoRestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class RecoveryStatusResponse
    {
        /// <summary>
        /// Initializes a new instance of the RecoveryStatusResponse class.
        /// </summary>
        public RecoveryStatusResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecoveryStatusResponse class.
        /// </summary>
        /// <param name="challenge">Possible values include: 'Unknown', 'Sms',
        /// 'Email', 'Selfie', 'Words', 'Device', 'Pin', 'Undefined'</param>
        /// <param name="overallProgress">Possible values include: 'Ongoing',
        /// 'WaitingForSupport', 'Frozen', 'Suspended', 'Allowed',
        /// 'Undefined'</param>
        /// <param name="challengeInfo">Addition data to perform the challenge.
        /// For example a message to be signed by the private key</param>
        public RecoveryStatusResponse(Challenge challenge, Progress overallProgress, string challengeInfo)
        {
            Challenge = challenge;
            OverallProgress = overallProgress;
            ChallengeInfo = challengeInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Sms', 'Email', 'Selfie',
        /// 'Words', 'Device', 'Pin', 'Undefined'
        /// </summary>
        [JsonProperty(PropertyName = "challenge")]
        public Challenge Challenge { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Ongoing', 'WaitingForSupport',
        /// 'Frozen', 'Suspended', 'Allowed', 'Undefined'
        /// </summary>
        [JsonProperty(PropertyName = "overallProgress")]
        public Progress OverallProgress { get; private set; }

        /// <summary>
        /// Gets addition data to perform the challenge. For example a message
        /// to be signed by the private key
        /// </summary>
        [JsonProperty(PropertyName = "challengeInfo")]
        public string ChallengeInfo { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
